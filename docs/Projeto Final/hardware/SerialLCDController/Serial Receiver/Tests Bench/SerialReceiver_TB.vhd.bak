LIBRARY ieee;
USE ieee.std_logic_1164.all;

entity SerialReceiver_TB is 
end SerialReceiver_TB;

architecture behavioral of SerialReceiver_TB is

component SerialReceiver is 
port
	(
		-- Input ports
		SDX   	: in std_logic;
		SCLK  	: in std_logic;
		nSS    	: in std_logic;
		Accept   : in std_logic;
		Reset    : in std_logic;
	
		-- Output ports
		D     	: out std_logic_vector(4 downto 0);
		DXval 	: out std_logic
	);
end component;

--UUT signals
constant MCLK_PERIOD : time := 20 ns;
constant MCLK_HALF_PERIOD : time := MCLK_PERIOD /2 ;

signal nSS_tb, reset_tb, Accept_tb, DXval_tb, clk_tb, SDX_tb: std_logic;
signal D_tb: std_logic_vector(4 downto 0);

begin

-- UNIT UNDER TEST
UUT: SerialReceiver port map (SCLK => clk_tb, Reset => reset_tb, nSS => nSS_tb, Accept => Accept_tb, 
SDX => SDX_tb, DXval => DXval_tb, D => D_tb);

clk_gen : process 
begin
clk_tb <= '0';
wait for MCLK_HALF_PERIOD;
clk_tb <= '1';
wait for MCLK_HALF_PERIOD;
end process;

stimulus : process
begin
--First Case: Success
-- reset

reset_tb <= '1';

wait for MCLK_PERIOD;

reset_tb <= '0';

wait for MCLK_PERIOD;

nSS_tb <= '0';
SDX_tb <= '1';

wait for MCLK_PERIOD;

wait for MCLK_PERIOD;

wait for MCLK_PERIOD;

wait for MCLK_PERIOD;

wait for MCLK_PERIOD;

wait for MCLK_PERIOD;

nSS_tb <= '1';

wait for MCLK_PERIOD;

Accept_tb <= '1';

wait for MCLK_PERIOD;

Accept_tb <= '0';

wait for MCLK_PERIOD;
wait for MCLK_PERIOD;
wait for MCLK_PERIOD;

--Second Case: Changing SS and accept combinations
-- reset

reset_tb <= '1';

wait for MCLK_PERIOD;

reset_tb <= '0';

wait for MCLK_PERIOD;

nSS_tb <= '1';

wait for MCLK_PERIOD;

nSS_tb <= '0';
SDX_tb <= '1';

wait for MCLK_PERIOD;

wait for MCLK_PERIOD;

wait for MCLK_PERIOD;

wait for MCLK_PERIOD;

wait for MCLK_PERIOD;

wait for MCLK_PERIOD;

nSS_tb <= '1';

wait for MCLK_PERIOD;

Accept_tb <= '0';

wait for MCLK_PERIOD;

Accept_tb <= '1';

wait for MCLK_PERIOD;

wait for MCLK_PERIOD;

Accept_tb <= '0';

wait for MCLK_PERIOD;



wait;

end process;

end behavioral;